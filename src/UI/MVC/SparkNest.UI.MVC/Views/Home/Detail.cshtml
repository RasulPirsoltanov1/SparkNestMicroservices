@using SparkNest.UI.MVC.Models.Product
@model ProductVM

@{
    Model.PhotoFileStockUrls.Add(Model.PhotoFileStockUrl);
    ViewData["Title"] = "Product Details";
}
<section class="item-details section">
    <div class="container">
        <div class="top-area">
            <div class="row align-items-center">
                <div class="col-lg-6 col-md-12 col-12">
                    <div id="product-carousel" class="carousel slide" data-bs-ride="carousel" style="max-height:500px">
                        <div class="carousel-inner">
                            @foreach (var photoUrl in Model.PhotoFileStockUrls)
                            {
                                <div class="carousel-item @(Model.PhotoFileStockUrls.IndexOf(photoUrl) == 0 ? "active" : "")">
                                    <img src="@photoUrl" class="d-block w-100" alt="@Model.Name" style="max-height:500px">
                                </div>
                            }
                        </div>
                        <button class="carousel-control-prev" type="button" data-bs-target="#product-carousel" data-bs-slide="prev">
                            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Previous</span>
                        </button>
                        <button class="carousel-control-next" type="button" data-bs-target="#product-carousel" data-bs-slide="next">
                            <span class="carousel-control-next-icon" aria-hidden="true"></span>
                            <span class="visually-hidden">Next</span>
                        </button>
                    </div>
                </div>
                <div class="col-lg-6 col-md-12 col-12">
                    <div class="product-info">
                        <h2 class="title">@Model.Name</h2>
                        <p class="category"><i class="lni lni-tag"></i> Category: <a href="javascript:void(0)">@Model.Category.Name</a></p>
                        <h3 class="price">
                            $@(Model.PriceDiscount == null ? Model.Price : Model.PriceDiscount)
                            @if (Model.PriceDiscount is not null)
                            {
                                <span>$@Model.Price</span>
                            }
                        </h3>

                        <p class="info-text">Lorem ipsum dolor sit amet, consectetur adipiscing elit id, tellus ad libero.Lorem ipsum dolor sit amet, consectetur adipiscing elit id, tellus ad libero.</p>
                        <div class="row">
                            <div class="col-8">
                                <div class="info-body">
                                    <h6>Features</h6>
                                    <ul class="features">
                                        <!-- Assuming your product has features -->
                                        @if (Model.Feature != null)
                                        {
                                            <li>Color: @Model.Feature.Color</li>
                                            <!-- Add more features if needed -->
                                        }
                                    </ul>
                                </div>
                            </div>
                            <div class="col-lg-4 col-md-4 col-12">
                                <div class="form-group quantity">
                                    <label for="quantity">Quantity</label>
                                    <form id="addToCartForm" asp-controller="Basket" asp-action="AddBasketItem" method="get">
                                        <input type="hidden" name="productId" value="@Model.Id" />
                                        <input class="form-control" type="number" id="quantity" value="1" name="quantity" />
                                        <button type="submit" class="btn btn-primary float-end mt-2" style="width: 100%;">Add to Cart</button>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="product-details-info">
                <div class="single-block">
                    <div class="row">
                        <div class="col-12">
                            <div class="info-body custom-responsive-margin">
                                <h3><b>Details</b></h3>
                                <p>@Html.Raw(Model.Description)</p>
                                <!-- You can add more details here if needed -->
                            </div>
                        </div>

                    </div>
                </div>
                @await Component.InvokeAsync("ProductCommentsVC", new
                    {
                        ProductId = Model.Id
                    })
            </div>
        </div>
</section>